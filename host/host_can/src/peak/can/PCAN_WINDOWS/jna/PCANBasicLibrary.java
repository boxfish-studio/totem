package peak.can.PCAN_WINDOWS.jna;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.win32.StdCallLibrary;

import peak.can.PCAN_WINDOWS.jna.structures.tagTPCANMsg;
import peak.can.PCAN_WINDOWS.jna.structures.tagTPCANMsgFD;
import peak.can.PCAN_WINDOWS.jna.structures.tagTPCANTimestamp;
/**
 * JNA Wrapper for library <b>PCANBasic</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface PCANBasicLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "PCANBasic";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(PCANBasicLibrary.JNA_LIBRARY_NAME);
	public static final PCANBasicLibrary INSTANCE = (PCANBasicLibrary)Native.loadLibrary(PCANBasicLibrary.JNA_LIBRARY_NAME, PCANBasicLibrary.class);
	public static final int PCAN_NONEBUS = (int)0x00;
	public static final int PCAN_ISABUS1 = (int)0x21;
	public static final int PCAN_ISABUS2 = (int)0x22;
	public static final int PCAN_ISABUS3 = (int)0x23;
	public static final int PCAN_ISABUS4 = (int)0x24;
	public static final int PCAN_ISABUS5 = (int)0x25;
	public static final int PCAN_ISABUS6 = (int)0x26;
	public static final int PCAN_ISABUS7 = (int)0x27;
	public static final int PCAN_ISABUS8 = (int)0x28;
	public static final int PCAN_DNGBUS1 = (int)0x31;
	public static final int PCAN_PCIBUS1 = (int)0x41;
	public static final int PCAN_PCIBUS2 = (int)0x42;
	public static final int PCAN_PCIBUS3 = (int)0x43;
	public static final int PCAN_PCIBUS4 = (int)0x44;
	public static final int PCAN_PCIBUS5 = (int)0x45;
	public static final int PCAN_PCIBUS6 = (int)0x46;
	public static final int PCAN_PCIBUS7 = (int)0x47;
	public static final int PCAN_PCIBUS8 = (int)0x48;
	public static final int PCAN_PCIBUS9 = (int)0x409;
	public static final int PCAN_PCIBUS10 = (int)0x40A;
	public static final int PCAN_PCIBUS11 = (int)0x40B;
	public static final int PCAN_PCIBUS12 = (int)0x40C;
	public static final int PCAN_PCIBUS13 = (int)0x40D;
	public static final int PCAN_PCIBUS14 = (int)0x40E;
	public static final int PCAN_PCIBUS15 = (int)0x40F;
	public static final int PCAN_PCIBUS16 = (int)0x410;
	public static final int PCAN_USBBUS1 = (int)0x51;
	public static final int PCAN_USBBUS2 = (int)0x52;
	public static final int PCAN_USBBUS3 = (int)0x53;
	public static final int PCAN_USBBUS4 = (int)0x54;
	public static final int PCAN_USBBUS5 = (int)0x55;
	public static final int PCAN_USBBUS6 = (int)0x56;
	public static final int PCAN_USBBUS7 = (int)0x57;
	public static final int PCAN_USBBUS8 = (int)0x58;
	public static final int PCAN_USBBUS9 = (int)0x509;
	public static final int PCAN_USBBUS10 = (int)0x50A;
	public static final int PCAN_USBBUS11 = (int)0x50B;
	public static final int PCAN_USBBUS12 = (int)0x50C;
	public static final int PCAN_USBBUS13 = (int)0x50D;
	public static final int PCAN_USBBUS14 = (int)0x50E;
	public static final int PCAN_USBBUS15 = (int)0x50F;
	public static final int PCAN_USBBUS16 = (int)0x510;
	public static final int PCAN_PCCBUS1 = (int)0x61;
	public static final int PCAN_PCCBUS2 = (int)0x62;
	public static final int PCAN_LANBUS1 = (int)0x801;
	public static final int PCAN_LANBUS2 = (int)0x802;
	public static final int PCAN_LANBUS3 = (int)0x803;
	public static final int PCAN_LANBUS4 = (int)0x804;
	public static final int PCAN_LANBUS5 = (int)0x805;
	public static final int PCAN_LANBUS6 = (int)0x806;
	public static final int PCAN_LANBUS7 = (int)0x807;
	public static final int PCAN_LANBUS8 = (int)0x808;
	public static final int PCAN_LANBUS9 = (int)0x809;
	public static final int PCAN_LANBUS10 = (int)0x80A;
	public static final int PCAN_LANBUS11 = (int)0x80B;
	public static final int PCAN_LANBUS12 = (int)0x80C;
	public static final int PCAN_LANBUS13 = (int)0x80D;
	public static final int PCAN_LANBUS14 = (int)0x80E;
	public static final int PCAN_LANBUS15 = (int)0x80F;
	public static final int PCAN_LANBUS16 = (int)0x810;
	public static final int PCAN_ERROR_OK = (int)0x00000;
	public static final int PCAN_ERROR_XMTFULL = (int)0x00001;
	public static final int PCAN_ERROR_OVERRUN = (int)0x00002;
	public static final int PCAN_ERROR_BUSLIGHT = (int)0x00004;
	public static final int PCAN_ERROR_BUSHEAVY = (int)0x00008;
	public static final int PCAN_ERROR_BUSWARNING = (int)0x00008;
	public static final int PCAN_ERROR_BUSPASSIVE = (int)0x40000;
	public static final int PCAN_ERROR_BUSOFF = (int)0x00010;
	public static final int PCAN_ERROR_ANYBUSERR = (int)(0x00008 | 0x00004 | 0x00008 | 0x00010 | 0x40000);
	public static final int PCAN_ERROR_QRCVEMPTY = (int)0x00020;
	public static final int PCAN_ERROR_QOVERRUN = (int)0x00040;
	public static final int PCAN_ERROR_QXMTFULL = (int)0x00080;
	public static final int PCAN_ERROR_REGTEST = (int)0x00100;
	public static final int PCAN_ERROR_NODRIVER = (int)0x00200;
	public static final int PCAN_ERROR_HWINUSE = (int)0x00400;
	public static final int PCAN_ERROR_NETINUSE = (int)0x00800;
	public static final int PCAN_ERROR_ILLHW = (int)0x01400;
	public static final int PCAN_ERROR_ILLNET = (int)0x01800;
	public static final int PCAN_ERROR_ILLCLIENT = (int)0x01C00;
	public static final int PCAN_ERROR_ILLHANDLE = (int)(0x01400 | 0x01800 | 0x01C00);
	public static final int PCAN_ERROR_RESOURCE = (int)0x02000;
	public static final int PCAN_ERROR_ILLPARAMTYPE = (int)0x04000;
	public static final int PCAN_ERROR_ILLPARAMVAL = (int)0x08000;
	public static final int PCAN_ERROR_UNKNOWN = (int)0x10000;
	public static final int PCAN_ERROR_ILLDATA = (int)0x20000;
	public static final int PCAN_ERROR_CAUTION = (int)0x2000000;
	public static final int PCAN_ERROR_INITIALIZE = (int)0x4000000;
	public static final int PCAN_ERROR_ILLOPERATION = (int)0x8000000;
	public static final int PCAN_NONE = (int)0x00;
	public static final int PCAN_PEAKCAN = (int)0x01;
	public static final int PCAN_ISA = (int)0x02;
	public static final int PCAN_DNG = (int)0x03;
	public static final int PCAN_PCI = (int)0x04;
	public static final int PCAN_USB = (int)0x05;
	public static final int PCAN_PCC = (int)0x06;
	public static final int PCAN_VIRTUAL = (int)0x07;
	public static final int PCAN_LAN = (int)0x08;
	public static final int PCAN_DEVICE_NUMBER = (int)0x01;
	public static final int PCAN_5VOLTS_POWER = (int)0x02;
	public static final int PCAN_RECEIVE_EVENT = (int)0x03;
	public static final int PCAN_MESSAGE_FILTER = (int)0x04;
	public static final int PCAN_API_VERSION = (int)0x05;
	public static final int PCAN_CHANNEL_VERSION = (int)0x06;
	public static final int PCAN_BUSOFF_AUTORESET = (int)0x07;
	public static final int PCAN_LISTEN_ONLY = (int)0x08;
	public static final int PCAN_LOG_LOCATION = (int)0x09;
	public static final int PCAN_LOG_STATUS = (int)0x0A;
	public static final int PCAN_LOG_CONFIGURE = (int)0x0B;
	public static final int PCAN_LOG_TEXT = (int)0x0C;
	public static final int PCAN_CHANNEL_CONDITION = (int)0x0D;
	public static final int PCAN_HARDWARE_NAME = (int)0x0E;
	public static final int PCAN_RECEIVE_STATUS = (int)0x0F;
	public static final int PCAN_CONTROLLER_NUMBER = (int)0x10;
	public static final int PCAN_TRACE_LOCATION = (int)0x11;
	public static final int PCAN_TRACE_STATUS = (int)0x12;
	public static final int PCAN_TRACE_SIZE = (int)0x13;
	public static final int PCAN_TRACE_CONFIGURE = (int)0x14;
	public static final int PCAN_CHANNEL_IDENTIFYING = (int)0x15;
	public static final int PCAN_CHANNEL_FEATURES = (int)0x16;
	public static final int PCAN_BITRATE_ADAPTING = (int)0x17;
	public static final int PCAN_BITRATE_INFO = (int)0x18;
	public static final int PCAN_BITRATE_INFO_FD = (int)0x19;
	public static final int PCAN_BUSSPEED_NOMINAL = (int)0x1A;
	public static final int PCAN_BUSSPEED_DATA = (int)0x1B;
	public static final int PCAN_IP_ADDRESS = (int)0x1C;
	public static final int PCAN_PARAMETER_OFF = (int)0x00;
	public static final int PCAN_PARAMETER_ON = (int)0x01;
	public static final int PCAN_FILTER_CLOSE = (int)0x00;
	public static final int PCAN_FILTER_OPEN = (int)0x01;
	public static final int PCAN_FILTER_CUSTOM = (int)0x02;
	public static final int PCAN_CHANNEL_UNAVAILABLE = (int)0x00;
	public static final int PCAN_CHANNEL_AVAILABLE = (int)0x01;
	public static final int PCAN_CHANNEL_OCCUPIED = (int)0x02;
	public static final int PCAN_CHANNEL_PCANVIEW = (int)(0x01 | 0x02);
	public static final int LOG_FUNCTION_DEFAULT = (int)0x00;
	public static final int LOG_FUNCTION_ENTRY = (int)0x01;
	public static final int LOG_FUNCTION_PARAMETERS = (int)0x02;
	public static final int LOG_FUNCTION_LEAVE = (int)0x04;
	public static final int LOG_FUNCTION_WRITE = (int)0x08;
	public static final int LOG_FUNCTION_READ = (int)0x10;
	public static final int LOG_FUNCTION_ALL = (int)0xFFFF;
	public static final int TRACE_FILE_SINGLE = (int)0x00;
	public static final int TRACE_FILE_SEGMENTED = (int)0x01;
	public static final int TRACE_FILE_DATE = (int)0x02;
	public static final int TRACE_FILE_TIME = (int)0x04;
	public static final int TRACE_FILE_OVERWRITE = (int)0x80;
	public static final int FEATURE_FD_CAPABLE = (int)0x01;
	public static final int PCAN_MESSAGE_STANDARD = (int)0x00;
	public static final int PCAN_MESSAGE_RTR = (int)0x01;
	public static final int PCAN_MESSAGE_EXTENDED = (int)0x02;
	public static final int PCAN_MESSAGE_FD = (int)0x04;
	public static final int PCAN_MESSAGE_BRS = (int)0x08;
	public static final int PCAN_MESSAGE_ESI = (int)0x10;
	public static final int PCAN_MESSAGE_STATUS = (int)0x80;
	public static final int PCAN_MODE_STANDARD = (int)0x00;
	public static final int PCAN_MODE_EXTENDED = (int)0x02;
	public static final int PCAN_BAUD_1M = (int)0x0014;
	public static final int PCAN_BAUD_800K = (int)0x0016;
	public static final int PCAN_BAUD_500K = (int)0x001C;
	public static final int PCAN_BAUD_250K = (int)0x011C;
	public static final int PCAN_BAUD_125K = (int)0x031C;
	public static final int PCAN_BAUD_100K = (int)0x432F;
	public static final int PCAN_BAUD_95K = (int)0xC34E;
	public static final int PCAN_BAUD_83K = (int)0x852B;
	public static final int PCAN_BAUD_50K = (int)0x472F;
	public static final int PCAN_BAUD_47K = (int)0x1414;
	public static final int PCAN_BAUD_33K = (int)0x8B2F;
	public static final int PCAN_BAUD_20K = (int)0x532F;
	public static final int PCAN_BAUD_10K = (int)0x672F;
	public static final int PCAN_BAUD_5K = (int)0x7F7F;
	public static final int PCAN_TYPE_ISA = (int)0x01;
	public static final int PCAN_TYPE_ISA_SJA = (int)0x09;
	public static final int PCAN_TYPE_ISA_PHYTEC = (int)0x04;
	public static final int PCAN_TYPE_DNG = (int)0x02;
	public static final int PCAN_TYPE_DNG_EPP = (int)0x03;
	public static final int PCAN_TYPE_DNG_SJA = (int)0x05;
	public static final int PCAN_TYPE_DNG_SJA_EPP = (int)0x06;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * = 0
	 */
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_Initialize(WORD, WORD, BYTE, DWORD, WORD)</code><br>
	 * <i>native declaration : line 334</i>
	 */
	int CAN_Initialize(short Channel, short Btr0Btr1, byte HwType, int IOPort, short Interrupt);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_InitializeFD(WORD, LPSTR)</code><br>
	 * <i>native declaration : line 357</i>
	 */
	int CAN_InitializeFD(short Channel, PCANBasicLibrary.LPSTR BitrateFD);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_Uninitialize(WORD)</code><br>
	 * <i>native declaration : line 369</i>
	 */
	int CAN_Uninitialize(short Channel);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_Reset(WORD)</code><br>
	 * <i>native declaration : line 381</i>
	 */
	int CAN_Reset(short Channel);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_GetStatus(WORD)</code><br>
	 * <i>native declaration : line 390</i>
	 */
	int CAN_GetStatus(short Channel);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_Read(WORD, TPCANMsg*, TPCANTimestamp*)</code><br>
	 * <i>native declaration : line 403</i>
	 */
	int CAN_Read(short Channel, tagTPCANMsg MessageBuffer, tagTPCANTimestamp TimestampBuffer);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_ReadFD(WORD, TPCANMsgFD*, UINT64*)</code><br>
	 * <i>native declaration : line 418</i>
	 */
	int CAN_ReadFD(short Channel, tagTPCANMsgFD MessageBuffer, PCANBasicLibrary.UINT64 TimestampBuffer);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_Write(WORD, TPCANMsg*)</code><br>
	 * <i>native declaration : line 430</i>
	 */
	int CAN_Write(short Channel, tagTPCANMsg MessageBuffer);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_WriteFD(WORD, TPCANMsgFD*)</code><br>
	 * <i>native declaration : line 441</i>
	 */
	int CAN_WriteFD(short Channel, tagTPCANMsgFD MessageBuffer);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_FilterMessages(WORD, DWORD, DWORD, BYTE)</code><br>
	 * <i>native declaration : line 458</i>
	 */
	int CAN_FilterMessages(short Channel, int FromID, int ToID, byte Mode);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_GetValue(WORD, BYTE, void*, DWORD)</code><br>
	 * <i>native declaration : line 476</i>
	 */
	int CAN_GetValue(short Channel, byte Parameter, Pointer Buffer, int BufferLength);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_SetValue(WORD, BYTE, void*, DWORD)</code><br>
	 * <i>native declaration : line 494</i>
	 */
	int CAN_SetValue(short Channel, byte Parameter, Pointer Buffer, int BufferLength);
	/**
	 * <returns>"A TPCANStatus error code"</returns><br>
	 * Original signature : <code>DWORD CAN_GetErrorText(DWORD, WORD, LPSTR)</code><br>
	 * <i>native declaration : line 512</i>
	 */
	int CAN_GetErrorText(int Error, short Language, PCANBasicLibrary.LPSTR Buffer);
	public static class LPSTR extends PointerType {
		public LPSTR(Pointer address) {
			super(address);
		}
		public LPSTR() {
			super();
		}
	};
	public static class UINT64 extends PointerType {
		public UINT64(Pointer address) {
			super(address);
		}
		public UINT64() {
			super();
		}
	};
}
